{"version":3,"sources":["utils/index.js","utils/config.js","redux/actions/moviesActions.js","redux/reduxConstants.js","redux/actions/globalActions.js","components/Button.jsx","containers/Layouts/Header.jsx","components/Dropdown.jsx","components/ListItem.jsx","containers/Movies/MovieItem.jsx","components/Movies.loader.jsx","containers/Movies/index.jsx","components/Modal.jsx","components/Form/index.jsx","components/Form/FormGroup.jsx","components/GenreInput.jsx","containers/Movies/AddMovie.jsx","containers/Movies/EditMovie.jsx","containers/Movies/DeleteMovie.jsx","components/Toast.jsx","containers/Toasts.jsx","containers/App.jsx","components/ErrorBoundry.jsx","redux/reducers/moviesReducer.js","redux/reducers/globalReducer.js","redux/reducers/index.js","redux/store.js","serviceWorker.js","index.js"],"names":["serializeString","str","replace","toLowerCase","trim","validateForm","formValues","props","Title","Year","Runtime","currentMovieId","initialValues","id","errors","duplicateErrorMessage","movieItemsArray","Object","values","movieItems","_i","length","movie","currentYear","Date","getFullYear","yearInputValue","parseInt","isNaN","concat","runtimeInputValue","Genres","forEach","field","generateId","now","toString","serializeTitle","title","split","map","char","toUpperCase","substr","join","trimForm","form","JSON","parse","stringify","API_URL","setSelectedMovie","movieId","type","payload","resetModals","dispatch","reduxFormReset","setToast","message","StyledButton","styled","button","_templateObject","_ref","background","_ref2","_ref3","color","_ref4","_ref5","Button","react_default","a","createElement","children","StyledHeader","header","Header_templateObject","connect","setAddMovieModal","components_Button","onClick","Dropdown","this","isOpen","document","body","addEventListener","resetDropdown","removeEventListener","StyledDropdown","Component","div","Dropdown_templateObject","bottom","right","width","_ref6","css","_templateObject2","defaultProps","StyledListItem","li","ListItem_templateObject","StyledIcon","svg","ListItem_templateObject2","ListItem","xlinkHref","icon","MovieItem","state","isDropdownOpen","handleDropdown","_this","setState","_this2","_this$props$movieItem","movieItem","Director","StyledMovieItem","className","StyledYear","genre","i","StyledGenreTag","key","StyledDirector","StyledMovieId","StyledOptions","StyledOptionsIcon","components_Dropdown","components_ListItem","setEditModal","setDeleteModal","MovieItem_templateObject","MovieItem_templateObject2","_templateObject3","span","_templateObject4","_templateObject5","_templateObject6","_templateObject7","StyledLoaderContainer","Movies_loader_templateObject","MoviesLoader","react_content_loader_es","height","speed","primaryColor","secondaryColor","StyledMovies","Movies_templateObject","movies","keys","Movies_MovieItem","Array","from","_","Movies_loader","StyledContainer","Modal_templateObject","StyledOverlay","Modal_templateObject2","Modal","ReactDOM","createPortal","react_transition_group","in","mountOnEnter","unmountOnExit","timeout","enter","exit","mountState","getElementById","StyledForm","Form_templateObject","StyledFormHeader","Form_templateObject2","StyledFormHeaderIcon","Form_templateObject3","Form","StyledFormGroup","FormGroup_templateObject","StyledInput","input","FormGroup_templateObject2","StyledLabel","label","FormGroup_templateObject3","StyledInputIcon","FormGroup_templateObject4","StyledInputError","FormGroup_templateObject5","FormGroup","name","error","assign","required","autoComplete","htmlFor","GenreInput","genres","toConsumableArray","value","inputValue","updateReduxForm","onChange","manualValidate","updateGenresState","_this$state","trimmedValue","removeGenre","index","newState","splice","handleKeyDown","e","isEnterPressed","which","isTabPressed","preventDefault","_this$props","_this$props$meta","meta","touched","isAddMovie","StyledGenresEditor","GenreInput_StyledGenreTag","StyledRemoveGenre","GenreInput_StyledInput","target","onKeyDown","onBlur","placeholder","showError","StyledAddGenreMobile","GenreInput_templateObject","GenreInput_templateObject2","GenreInput_templateObject3","GenreInput_templateObject4","GenreInput_templateObject5","GenreInput_templateObject6","AddMovie","onSubmit","addMovie","initialize","_ref$meta","Form_FormGroup","showAddModal","handleSubmit","components_Modal","components_Form","noValidate","Field","component","renderInput","blur","Math","random","style","display","_ref2$movies","objectSpread","reduxForm","validate","destroyOnUnmount","touchOnBlur","EditMovie","updateMovieItems","showEditModal","selectedMovie","enableReinitialize","StyledWarningIcon","DeleteMovie_templateObject","StyledWarningText","DeleteMovie_templateObject2","showDeleteModal","deleteMovie","fadeOut","keyframes","Toast_templateObject","StyledToast","Toast_templateObject2","Toast","StyledToasts","Toasts_templateObject","toasts","global","removeToast","components_Toast","onAnimationEnd","App","fetchMovies","Fragment","Layouts_Header","containers_Movies","Movies_AddMovie","Movies_EditMovie","Movies_DeleteMovie","containers_Toasts","arguments","undefined","asyncToGenerator","regenerator_default","mark","_callee","moviesData","_moviesData$data","Response","Search","movieIds","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","movieData","_movieData$data","Genre","wrap","_context","prev","next","axios","get","sent","data","imdbID","Symbol","iterator","done","t0","return","finish","t1","stop","_x","apply","ErrorBoundry","hasErr","StyledErrorBoundry","ex","ErrorBoundry_templateObject","initialState","combineReducers","action","defineProperty","_state$movieItems","rest","objectWithoutProperties","filter","formReducer","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","Boolean","window","location","hostname","match","render","es","components_ErrorBoundry","containers_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8017696a.chunk.js","sourcesContent":["export const serializeString = str => {\r\n  return str && str.replace(/[^a-zA-Z0-9]/gi, ' ').replace(/ +/g, ' ').toLowerCase().trim();\r\n} \r\n\r\nexport const validateForm = (formValues, props) => {\r\n  const formFields = ['Title', 'Year', 'Runtime', 'Director'];\r\n  const { Title, Year, Runtime } = formValues;\r\n  const currentMovieId = props.initialValues && props.initialValues.id\r\n  const errors = {};\r\n\r\n  // Check for duplicate title\r\n  const duplicateErrorMessage = 'A movie with the same title is already exists, please choose another';\r\n  const movieItemsArray = Object.values(props.movieItems);\r\n  for(let movie of movieItemsArray) {\r\n    // Duplicate validation when editing (id to compare)\r\n    if (currentMovieId) {\r\n      if (serializeString(Title) === serializeString(movie.Title) && currentMovieId !== movie.id) {\r\n        errors.Title = duplicateErrorMessage;\r\n      }\r\n      // Duplicate validation when adding new movie\r\n    } else {\r\n      if (serializeString(Title) === serializeString(movie.Title)) {\r\n        errors.Title = duplicateErrorMessage;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Check for ONLY non-alphanumeric title\r\n  if (serializeString(Title) === '') {\r\n    errors.Title = 'At least one english letter is required.';\r\n  }\r\n\r\n  // Check for valid year\r\n  const currentYear = new Date().getFullYear();\r\n  const firstMovieDebut = 1888;\r\n  const yearInputValue = parseInt(Year);\r\n  if (!(yearInputValue >= firstMovieDebut && yearInputValue <= currentYear) || isNaN(Year)) {\r\n    errors.Year = `Valid year is between ${firstMovieDebut} and ${currentYear}`;\r\n  }\r\n\r\n  // Check for valid runtime\r\n  const runtimeInputValue = parseInt(Runtime);\r\n  if ((isNaN(Runtime)) || runtimeInputValue <= 0) {\r\n    errors.Runtime = 'Runtime must be a positive whole number.';\r\n  }\r\n  \r\n  // Check for valid genres\r\n  if (formValues.Genres && !formValues.Genres.length) {\r\n    errors.Genres = 'Genres cannot be empty.';\r\n  }\r\n\r\n  // Check for empty fields\r\n  formFields.forEach(field => {\r\n    if (formValues[field] && !formValues[field].trim().length) {\r\n      errors[field] = `Field \"${field}\" is required.`;\r\n    }\r\n    \r\n    if (!formValues[field]) errors[field] = `Field \"${field}\" is required.`;\r\n  });\r\n\r\n  return errors;\r\n}\r\n\r\nexport const generateId = () => `${Date.now().toString()}`;\r\n\r\nexport const serializeTitle = title => serializeString(title)\r\n  .split(' ')\r\n  .map(char => char[0].toUpperCase() + char.substr(1))\r\n  .join(' ');\r\n\r\nexport const trimForm = form => JSON.parse(JSON.stringify(form).replace(/\"\\s+|\\s+\"/g,'\"'));","export const API_URL = 'https://www.omdbapi.com/?apikey=bddffa2e';","import axios from 'axios';\r\nimport { \r\n  SET_MOVIES, \r\n  SET_ADD_MOVIE_MODAL,\r\n  SET_EDIT_MODAL, \r\n  SET_DELETE_MODAL, \r\n  SET_SELECTED_MOVIE, \r\n  UPDATE_MOVIE_ITEMS, \r\n  DELETE_MOVIE,\r\n  RESET_MODALS,\r\n  ADD_MOVIE\r\n} from '../reduxConstants';\r\nimport { reset as reduxFormReset } from 'redux-form';\r\nimport { generateId, serializeTitle, trimForm } from '../../utils'; \r\nimport { API_URL } from '../../utils/config';\r\nimport { setToast } from './';\r\n\r\n\r\nexport const fetchMovies = (title = 'iron man') => async dispatch => {\r\n  try {\r\n    const moviesData = await axios.get(`${API_URL}&s=${title}`);\r\n    const { Response, Search } = moviesData.data;\r\n    if (Response === 'True') {\r\n      const movieIds = Search.map(({ imdbID }) => imdbID);\r\n      const movies = {};\r\n      for(let movieId of movieIds) {\r\n        const movieData = await axios.get(`${API_URL}&i=${movieId}`);\r\n        const { Title, Year, Runtime, Genre, Director } = movieData.data;\r\n        const id = generateId();\r\n        movies[id] = {\r\n          id, \r\n          Title,\r\n          Year,\r\n          Runtime: Runtime.split(' ')[0],\r\n          Genres: Genre.split(','),\r\n          Director\r\n        }\r\n      }\r\n      dispatch({ type: SET_MOVIES, payload: movies });\r\n    } \r\n  } catch(ex) {\r\n    throw ex;\r\n  }\r\n}\r\n\r\nexport const setSelectedMovie = movieId => ({\r\n  type: SET_SELECTED_MOVIE,\r\n  payload: movieId\r\n});\r\n\r\nexport const setAddMovieModal = () => ({ type: SET_ADD_MOVIE_MODAL });\r\n\r\nexport const setEditModal = movieId => dispatch => { \r\n  dispatch(setSelectedMovie(movieId));\r\n  dispatch({ type: SET_EDIT_MODAL });\r\n};\r\n\r\nexport const setDeleteModal =  movieId => dispatch => { \r\n  dispatch(setSelectedMovie(movieId));\r\n  dispatch({ type: SET_DELETE_MODAL });\r\n};\r\n\r\nexport const updateMovieItems = formValues => dispatch => {\r\n  dispatch({\r\n    type: UPDATE_MOVIE_ITEMS, \r\n    payload: {\r\n      ...trimForm(formValues),\r\n      Title: serializeTitle(formValues.Title)\r\n    }\r\n  });\r\n  dispatch(resetModals());\r\n  dispatch(setToast('Movie updated successfully'));\r\n}\r\n\r\nexport const addMovie = formValues => dispatch => {\r\n  dispatch({\r\n    type: ADD_MOVIE,\r\n    payload: {\r\n      id: generateId(),\r\n      ...trimForm(formValues),\r\n      Title: serializeTitle(formValues.Title)\r\n    }\r\n  });\r\n  dispatch(resetModals());\r\n  dispatch(setToast('Movie added successfully'));  \r\n}\r\n\r\nexport const deleteMovie = () => dispatch => {\r\n  dispatch({ type: DELETE_MOVIE });\r\n  dispatch(resetModals());\r\n  dispatch(setToast('Movie deleted successfully'));\r\n}\r\n\r\nexport const resetModals = () => dispatch => {\r\n  dispatch({ type: RESET_MODALS });\r\n  dispatch(reduxFormReset('editMovie'));\r\n};\r\n\r\n","//------------------------------------//\r\n//  Movies Constants                  //\r\n//------------------------------------//\r\nexport const SET_MOVIES = 'SET_MOVIES';\r\nexport const SET_SELECTED_MOVIE = 'SET_SELECTED_MOVIE';\r\nexport const SET_ADD_MOVIE_MODAL = 'SET_ADD_MOVIE_MODAL';\r\nexport const SET_EDIT_MODAL = 'SET_EDIT_MODAL';\r\nexport const SET_DELETE_MODAL = 'SET_DELETE_MODAL';\r\nexport const UPDATE_MOVIE_ITEMS = 'UPDATE_MOVIE_ITEMS';\r\nexport const DELETE_MOVIE = 'DELETE_MOVIE';\r\nexport const RESET_MODALS = 'RESET_MODALS';\r\nexport const ADD_MOVIE = 'ADD_MOVIE';\r\n\r\n//------------------------------------//\r\n//  Global Constants                  //\r\n//------------------------------------//\r\nexport const SET_TOAST = 'SET_TOAST';\r\nexport const REMOVE_TOAST = 'REMOVE_TOAST';\r\n\r\n","import { SET_TOAST, REMOVE_TOAST } from \"../reduxConstants\";\r\nimport { generateId } from \"../../utils\";\r\n\r\nexport const setToast = message => ({\r\n  type: SET_TOAST,\r\n  payload: {\r\n    id: generateId(),\r\n    message\r\n  }\r\n});\r\n\r\nexport const removeToast = id => ({\r\n  type: REMOVE_TOAST,\r\n  payload: {\r\n    id\r\n  }\r\n});","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = props => (\r\n  <StyledButton {...props}>\r\n    {props.children}\r\n  </StyledButton>\r\n);\r\n\r\nconst StyledButton = styled.button`\r\n  border: .1rem solid ${({ background }) => background};\r\n  border-radius: .5rem;\r\n  background: ${({ background }) => background};\r\n  color: ${({ color }) => color};\r\n  transition: .3s;\r\n  padding: 1rem 2rem;\r\n  cursor: pointer;\r\n  outline: none;\r\n  display: inline-block;\r\n  text-align: center;\r\n  font-family: inherit;\r\n\r\n  &:not(:last-of-type) {\r\n    margin-right: 2rem;\r\n  }\r\n\r\n  &:hover, &:focus {\r\n    background: ${({ color }) => color};\r\n    color: ${({ background }) => background};\r\n  }\r\n`;\r\n\r\nButton.propTypes = {\r\n  background: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { setAddMovieModal } from '../../redux/actions';\r\nimport { connect } from 'react-redux';\r\nimport Button from '../../components/Button';\r\n\r\nconst Header = ({ setAddMovieModal }) => (\r\n  <StyledHeader>\r\n    Herolo Cinema\r\n\r\n    <Button\r\n      color=\"white\"\r\n      background=\"var(--main-color)\"\r\n      onClick={setAddMovieModal}\r\n    >\r\n      Add Movie\r\n    </Button>\r\n  </StyledHeader>\r\n);\r\n\r\nconst StyledHeader = styled.header`\r\n  position: sticky;\r\n  top: 0;\r\n  width: 100%;\r\n  border-bottom: var(--main-color);\r\n  height: 5.5rem;\r\n  background: white;\r\n  box-shadow: 0 .5rem 1.3rem rgba(0, 0, 0, .3);\r\n  border-bottom: .5rem solid var(--main-color);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  font-size: 1.8rem;\r\n  color: var(--main-color);\r\n  font-weight: 700;\r\n  padding: 0 1rem;\r\n  z-index: 10;\r\n`; \r\n\r\nexport default connect(null, { setAddMovieModal })(Header);","import React, { Component } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Dropdown extends Component {\r\n  componentDidUpdate() {\r\n    this.props.isOpen\r\n      ? document.body.addEventListener('click', this.props.resetDropdown)\r\n      : document.body.removeEventListener('click', this.props.resetDropdown)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <StyledDropdown {...this.props}>{this.props.children}</StyledDropdown>\r\n    );\r\n  } \r\n}\r\n\r\nexport const StyledDropdown = styled.div`\r\n  background: ${({ background }) => background};\r\n  color: ${({ color }) => color};\r\n  box-shadow: 0 0 1rem rgba(0, 0, 0, .2);\r\n  position: absolute;\r\n  transition: all 0.15s, transform 0.2s;\r\n  transform-origin: bottom right;\r\n  bottom: ${({ bottom }) => bottom};\r\n  right: ${({ right }) => right};\r\n  width: ${({ width }) => width};\r\n  z-index: 1;\r\n  overflow-y: auto;\r\n  visibility: hidden;\r\n  opacity: 0;\r\n  transform: scale(.5);\r\n  border-radius: .3rem;\r\n  overflow: hidden;\r\n\r\n  ${({ isOpen }) => isOpen && css`\r\n    visibility: visible;\r\n    opacity: 1;\r\n    transform: scale(1);\r\n  `};\r\n`;\r\n\r\nDropdown.propTypes = {\r\n  background: PropTypes.string,\r\n  color: PropTypes.string,\r\n  top: PropTypes.number,\r\n  left: PropTypes.number,\r\n  isOpen: PropTypes.bool,\r\n  width: PropTypes.string\r\n};\r\n\r\nDropdown.defaultProps = {\r\n  background: 'white',\r\n  color: 'black',\r\n  bottom: 0,\r\n  right: 0,\r\n  isOpen: true\r\n};\r\n\r\nexport default Dropdown;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nexport const ListItem = props => (\r\n  <StyledListItem {...props}>\r\n    <StyledIcon>\r\n      <use xlinkHref={`./sprite.svg#${props.icon}`}></use>\r\n    </StyledIcon>\r\n    {props.children}\r\n  </StyledListItem>\r\n);\r\n\r\nListItem.propTypes = {\r\n  background: PropTypes.string,\r\n  color: PropTypes.string,\r\n  icon: PropTypes.string\r\n}\r\n\r\nexport const StyledListItem = styled.li`\r\n  padding: 1rem .5rem;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  transition: .3s;\r\n  color: ${({ color }) => color};\r\n  background: ${({ background }) => background};\r\n  font-size: 1.6rem;\r\n\r\n  &:hover {\r\n    background: ${({ color }) => color};\r\n    color: ${({ background }) => background};\r\n  }\r\n`;\r\n\r\nexport const StyledIcon = styled.svg`\r\n  fill: currentColor;\r\n  width: 1.8rem;\r\n  height: 1.8rem;\r\n  margin-right: 1rem;\r\n`;\r\n\r\nexport default ListItem;","import React, { Component } from 'react';\r\nimport Dropdown from '../../components/Dropdown';\r\nimport ListItem from '../../components/ListItem';\r\nimport { setSelectedMovie, setEditModal, setDeleteModal } from '../../redux/actions';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nclass MovieItem extends Component {\r\n  state = {\r\n    isDropdownOpen: false\r\n  }\r\n\r\n  handleDropdown = () => {\r\n    this.setState({ isDropdownOpen: !this.state.isDropdownOpen });\r\n  }\r\n\r\n  render() {\r\n    const { id, Title, Year, Runtime, Genres, Director } = this.props.movieItem;\r\n    return (\r\n      <StyledMovieItem>\r\n        <h3 className=\"Title\">\r\n          {Title} \r\n          <StyledYear>({Year})</StyledYear>\r\n        </h3>\r\n        <div className=\"Genres\">\r\n          { \r\n            Genres.map((genre, i) => (\r\n              <StyledGenreTag key={i}>{genre}</StyledGenreTag>\r\n            )) \r\n          }\r\n        </div>\r\n        <div className=\"Runtime\">{Runtime}min</div>\r\n        <div className=\"Director\">\r\n          <StyledDirector>Director: </StyledDirector>\r\n          {Director}\r\n        </div>\r\n        <StyledMovieId>#m{id.substr(8)}</StyledMovieId>\r\n\r\n        <StyledOptions onClick={this.handleDropdown}>\r\n          <StyledOptionsIcon>\r\n            <use xlinkHref=\"./sprite.svg#icon-list2\"></use>\r\n          </StyledOptionsIcon>\r\n\r\n          <Dropdown \r\n            isOpen={this.state.isDropdownOpen} \r\n            resetDropdown={this.handleDropdown}\r\n            width=\"13rem\"\r\n          >\r\n            <ul>\r\n              <ListItem\r\n                color=\"var(--main-color)\"\r\n                background=\"white\"\r\n                icon=\"icon-pencil\"\r\n                onClick={() => this.props.setEditModal(id)}\r\n              >\r\n                Edit\r\n              </ListItem>\r\n              \r\n              <ListItem\r\n                color=\"var(--danger-color)\"\r\n                background=\"white\"\r\n                icon=\"icon-bin2\"\r\n                onClick={() => this.props.setDeleteModal(id)}\r\n              >\r\n                Delete\r\n              </ListItem>\r\n            </ul>\r\n          </Dropdown>\r\n        </StyledOptions>\r\n      </StyledMovieItem>\r\n    );\r\n  };\r\n}\r\n\r\nconst StyledMovieItem = styled.div`\r\n  width: 35rem;\r\n  height: 30rem;\r\n  max-width: 100%;\r\n  background: white;\r\n  margin: 1rem;\r\n  padding: 1rem;\r\n  box-shadow: 0 0 1.1rem rgba(0, 0, 0, .2); \r\n  position: relative;\r\n  transition: .3s;\r\n  \r\n  &:hover {\r\n    transform: translateY(-.5rem);\r\n    box-shadow: 0 .5rem 1.5rem rgba(0, 0, 0, .2); \r\n  }\r\n`;\r\n\r\nconst StyledOptions = styled.div`\r\n  position: absolute;\r\n  right: 1rem;\r\n  bottom: 1rem;\r\n  background: transparent;\r\n  cursor: pointer;\r\n  z-index: 1;\r\n`;\r\n\r\nconst StyledOptionsIcon = styled.svg`\r\n  width: 2rem;\r\n  height: 2rem;\r\n  fill: var(--main-color);\r\n`;\r\n\r\nconst StyledYear = styled.span`\r\n  font-size: 1.65rem;\r\n  color: #363636;\r\n  padding: 0 .5rem;\r\n`;\r\n\r\nconst StyledGenreTag = styled.span`\r\n  display: inline-block;\r\n  box-shadow: 0 .2rem .5rem rgba(0, 0, 0, .2);\r\n  padding: .3rem .6rem;\r\n  background: #fff;\r\n  border-radius: .5rem;\r\n\r\n  &:not(:last-child) {\r\n    margin: 0 .5rem 1rem 0;\r\n  }\r\n`;\r\n\r\nconst StyledDirector = styled.span`\r\n  font-weight: bold;\r\n`;\r\n\r\nconst StyledMovieId = styled.span`\r\n  position: absolute;\r\n  left: 1rem;\r\n  bottom: 1rem;\r\n  color: #bebebe;\r\n`;\r\n\r\nexport default connect(null, { setSelectedMovie, setEditModal, setDeleteModal })(MovieItem);\r\n","import React from 'react'\r\nimport ContentLoader from 'react-content-loader';\r\nimport styled from 'styled-components';\r\n\r\nconst MoviesLoader = () => (\r\n  <StyledLoaderContainer>\r\n    <ContentLoader \r\n      height={300}\r\n      width={350}\r\n      speed={2}\r\n      primaryColor=\"#f2f3f4\"\r\n      secondaryColor=\"#a8a8a8\"\r\n    />\r\n  </StyledLoaderContainer>\r\n);\r\n\r\nconst StyledLoaderContainer = styled.div`\r\n  width: 35rem;\r\n  height: 30rem;\r\n  margin: 1rem;\r\n  display: inline-block;\r\n`;\r\n\r\nexport default MoviesLoader;\r\n\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport MovieItem from './MovieItem';\r\nimport styled from 'styled-components';\r\nimport MoviesLoader from '../../components/Movies.loader';\r\n\r\nconst Movies = ({ movieItems }) => (\r\n  <StyledMovies>\r\n    {\r\n      Object.keys(movieItems).length \r\n        ? Object.values(movieItems).map(movieItem => <MovieItem key={movieItem.id} movieItem={movieItem} />) \r\n        : Array.from({ length: 10 }).map((_, i) => <MoviesLoader key={i} />)\r\n    }\r\n  </StyledMovies>\r\n);\r\n\r\nconst StyledMovies = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n  padding: 0 1rem;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst mapStateToProps = ({ movies: { movieItems } }) => ({ movieItems });\r\nexport default connect(mapStateToProps, null)(Movies);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { Transition } from 'react-transition-group';\r\n\r\nconst Modal = props => (\r\n  ReactDOM.createPortal(\r\n    <Transition\r\n      in={props.isOpen} \r\n      mountOnEnter \r\n      unmountOnExit\r\n      timeout={{ enter: 0, exit: 300 }}\r\n    >\r\n      {\r\n        mountState => (\r\n          <StyledOverlay className={mountState}>\r\n            <StyledContainer>\r\n              {props.children}\r\n            </StyledContainer>\r\n          </StyledOverlay>\r\n        )\r\n      }\r\n    </Transition>,\r\n    document.getElementById('modalMount')\r\n  )\r\n);\r\n\r\nconst StyledContainer = styled.div`\r\n  background: white;\r\n  box-shadow: 0 1rem 3rem rgba(0, 0, 0, .2);\r\n  padding: 3rem;\r\n  width: 100%;\r\n  max-width: 70rem;\r\n  border-radius: .5rem;\r\n  text-align: center;\r\n  transition: .3s;\r\n  transform: scale(.9) translateY(10rem);\r\n  opacity: 0;\r\n  overflow-y: auto;\r\n  max-height: 95vh;\r\n`;\r\n\r\nconst StyledOverlay = styled.div`\r\n  position: fixed;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: rgba(0, 0, 0, .25);\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 20;\r\n  top: 0;\r\n  left: 0;\r\n  padding: 1rem;\r\n  opacity: 0;\r\n  transition: .3s;\r\n\r\n  &.entered {\r\n    opacity: 1;\r\n\r\n    ${StyledContainer}  {\r\n      transform: scale(1) translateY(0);\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nModal.propTypes = {\r\n  isOpen: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default Modal;","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Form = props => (\r\n  <StyledForm {...props}>\r\n    <StyledFormHeader>\r\n      <StyledFormHeaderIcon>\r\n        <use xlinkHref={`./sprite.svg#${props.icon}`}></use>\r\n      </StyledFormHeaderIcon>\r\n      {props.header}\r\n    </StyledFormHeader>\r\n\r\n    {props.children}\r\n  </StyledForm>\r\n);\r\n\r\nconst StyledForm = styled.form`\r\n  max-width: 70%;\r\n  margin: 0 auto;\r\n\r\n  @media (max-width: 700px) {\r\n    max-width: 100%;\r\n  }\r\n`;\r\n\r\nconst StyledFormHeader = styled.header`\r\n  font-size: 3rem;\r\n  letter-spacing: -.1rem;\r\n  text-align: center;\r\n  font-weight: 300;\r\n  color: #343434;\r\n  line-height: 2rem;\r\n  text-transform: capitalize;\r\n\r\n  &:after {\r\n    content: '';\r\n    display: block;\r\n    margin: 1.5rem auto 0 auto;\r\n    width: 73%;\r\n    height: .2rem;\r\n    background: var(--main-color);\r\n    margin-bottom: 3.3rem;\r\n  }\r\n`;\r\n\r\nconst StyledFormHeaderIcon = styled.svg`\r\n  width: 9rem;\r\n  height: 9rem;\r\n  color: currentColor;\r\n  display: block;\r\n  fill: currentColor;\r\n  margin: 0 auto;\r\n`;\r\n\r\nForm.propTypes = {\r\n  icon: PropTypes.string.isRequired,\r\n  header: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst FormGroup = ({ input, name, label, icon, error }) => (\r\n  <StyledFormGroup>\r\n    <StyledInput \r\n      {...input}\r\n      id={name}\r\n      required \r\n      autoComplete=\"off\"\r\n      className={error && 'invalid'}\r\n    />\r\n    <StyledInputError>{error}</StyledInputError>\r\n    <StyledLabel htmlFor={name}>{label}</StyledLabel>\r\n    <StyledInputIcon>\r\n      <use xlinkHref={`./sprite.svg#${icon}`}></use>\r\n    </StyledInputIcon>\r\n  </StyledFormGroup>\r\n);\r\n\r\nconst StyledFormGroup = styled.div`\r\n  position: relative;\r\n  margin-bottom: 3.3rem;\r\n  flex: 1;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  border: none;\r\n  background: white;\r\n  border-bottom: .2rem solid #d4d4d4;\r\n  display: block;\r\n  padding: .5rem .2rem;\r\n  outline: none;\r\n  width: 100%;\r\n  transition: .3s;\r\n  font-family: inherit;\r\n  font-size: 1.5rem;\r\n\r\n\r\n  &:focus, &:valid {\r\n    border-color: var(--main-color);\r\n    \r\n    & ~ label, & ~ svg {\r\n      color: var(--main-color);\r\n      fill: var(--main-color);\r\n    }\r\n    \r\n    & ~ label {\r\n      font-size: 1.4rem;\r\n      transform: translateY(-1.7rem);\r\n    }\r\n  }\r\n\r\n  &.invalid {\r\n    border-color: var(--danger-color);\r\n  \r\n    & ~ label, & ~ svg {\r\n      color: var(--danger-color);\r\n      fill: var(--danger-color);\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledLabel = styled.label`\r\n  position: absolute;\r\n  transition: .25s;\r\n  cursor: text;\r\n  user-select: none;\r\n  color: #888;\r\n  left: .1rem;\r\n  top: 0;\r\n  transition: .3s;\r\n`;\r\n\r\nconst StyledInputIcon = styled.svg`\r\n  position: absolute;\r\n  transition: .3s;\r\n  right: 0.4rem;\r\n  top: -.3rem;\r\n  width: 2rem;\r\n  height: 3rem;\r\n`;\r\n\r\nconst StyledInputError = styled.div`\r\n  color: var(--danger-color);\r\n  font-size: 1.25rem;\r\n  text-align: left;\r\n`;\r\n\r\nexport default FormGroup;\r\n","import React, { Component } from 'react';\r\nimport styled, { css } from 'styled-components';\r\n\r\nclass GenreInput extends Component {\r\n  state = {\r\n    genres: [...this.props.input.value] || [],\r\n    inputValue: ''\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updateReduxForm();\r\n  }\r\n\r\n  updateReduxForm = () => {\r\n    const { genres } = this.state;\r\n    // Add { Array<genres> } to reudx-form\r\n    this.props.input.onChange(genres);\r\n    if (!genres.length) this.props.manualValidate();\r\n  };\r\n\r\n  updateGenresState = () => {\r\n    const { genres, inputValue } = this.state;\r\n    const trimmedValue = inputValue.trim();\r\n    if (trimmedValue.length) {\r\n      this.setState(\r\n        {\r\n          genres: [...genres, trimmedValue]\r\n        },\r\n        () => {\r\n          this.updateReduxForm();\r\n          this.setState({ inputValue: '' });\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  removeGenre = index => {\r\n    const newState = [...this.state.genres];\r\n    newState.splice(index, 1);\r\n    this.setState({ genres: newState }, () => this.updateReduxForm());\r\n  };\r\n\r\n  handleKeyDown = e => {\r\n    const isEnterPressed = e.which === 13;\r\n    const isTabPressed = e.which === 9;\r\n    if (isEnterPressed || isTabPressed) {\r\n      if (this.state.inputValue.length) {\r\n        this.updateGenresState();\r\n        // Prevent form submission / tab to next element\r\n        e.preventDefault();\r\n      }\r\n      // Prevent only submission if input is empty\r\n      isEnterPressed && e.preventDefault();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { meta: { touched, error }, isAddMovie } = this.props;\r\n    return (\r\n      <StyledGenresEditor>\r\n        {this.state.genres.map((genre, i) => (\r\n          <StyledGenreTag key={i}>\r\n            {genre}\r\n            <StyledRemoveGenre onClick={() => this.removeGenre(i)}>\r\n              X\r\n            </StyledRemoveGenre>\r\n          </StyledGenreTag>\r\n        ))}\r\n        <div>\r\n          <StyledInput\r\n            {...this.props.input}\r\n            value={this.state.inputValue}\r\n            onChange={e => this.setState({ inputValue: e.target.value })}\r\n            onKeyDown={this.handleKeyDown}\r\n            // Override redux-form blur function to prevent value reset\r\n            onBlur={() => null}\r\n            placeholder=\"Add genre\"\r\n            showError={isAddMovie ? touched && error : error}\r\n          />\r\n          <StyledAddGenreMobile onClick={this.updateGenresState}>\r\n            Add\r\n          </StyledAddGenreMobile>\r\n        </div>\r\n      </StyledGenresEditor>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledGenresEditor = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  flex-wrap: wrap;\r\n  margin-bottom: 3rem;\r\n`;\r\n\r\nconst StyledGenreTag = styled.span`\r\n  display: inline-block;\r\n  background: var(--main-color);\r\n  border-radius: 0.5rem;\r\n  color: white;\r\n  box-shadow: 0 0.2rem 0.5rem rgba(0, 0, 0, 0.2);\r\n  padding: 0.63rem 0.7rem;\r\n  margin: 0 0.8rem 0.8rem 0;\r\n`;\r\n\r\nconst StyledRemoveGenre = styled.span`\r\n  display: inline-block;\r\n  height: 100%;\r\n  background: #0049a3;\r\n  padding: 0 0.8rem;\r\n  cursor: pointer;\r\n  margin-left: 0.7rem;\r\n  border-radius: 0.7rem;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  padding: 0.9rem 0.5rem;\r\n  border-radius: 0.5rem;\r\n  margin: 0 0 0.5rem 0;\r\n  border: none;\r\n  outline: none;\r\n  flex: 1;\r\n  box-shadow: 0 0.1rem 0.6rem rgba(0, 0, 0, 0.2);\r\n  font-family: inherit;\r\n  border: 0.2rem solid transparent;\r\n  max-width: 11rem;\r\n  border-top-right-radius: 0;\r\n  border-bottom-right-radius: 0;\r\n\r\n  ${({ showError }) =>\r\n    showError &&\r\n    css`\r\n      border-color: var(--danger-color);\r\n    `}\r\n`;\r\n\r\nconst StyledAddGenreMobile = styled(StyledGenreTag)`\r\n  border-top-left-radius: 0;\r\n  border-bottom-left-radius: 0;\r\n  padding: 0.55rem 0.7rem;\r\n  transform: translateY(0.12rem);\r\n  box-shadow: 0 0.1rem 0.6rem rgba(0, 0, 0, 0.2);\r\n  cursor: pointer;\r\n`;\r\n\r\nexport default GenreInput;\r\n","import React, { Component } from 'react';\r\nimport Modal from '../../components/Modal';\r\nimport { Field, reduxForm, blur } from 'redux-form';\r\nimport Form from '../../components/Form';\r\nimport FormGroup from '../../components/Form/FormGroup';\r\nimport Button from '../../components/Button';\r\nimport { connect } from 'react-redux';\r\nimport { resetModals, addMovie } from '../../redux/actions';\r\nimport { validateForm } from '../../utils';\r\nimport GenreInput from '../../components/GenreInput';\r\n\r\nclass AddMovie extends Component {\r\n  renderInput({ input, label, icon, meta: { error, touched } }) {\r\n    const { name } = input;\r\n    return (\r\n      <FormGroup \r\n        input={input}\r\n        name={name}\r\n        label={label}\r\n        icon={icon}\r\n        error={touched && error}\r\n      />\r\n    );\r\n  }\r\n\r\n  onSubmit = formValues => {\r\n    this.props.addMovie(formValues);\r\n    this.props.initialize();\r\n  }\r\n\r\n  render() {\r\n    const { showAddModal, handleSubmit, resetModals } = this.props;\r\n    return (\r\n      <Modal isOpen={showAddModal}>\r\n        <Form\r\n            icon=\"icon-play\"\r\n            header=\"Add Movie\" \r\n            onSubmit={handleSubmit(this.onSubmit)}\r\n            noValidate \r\n          >\r\n          <Field \r\n            name=\"Title\"\r\n            label=\"Title\" \r\n            icon=\"icon-subject\"\r\n            component={this.renderInput}\r\n          />\r\n\r\n          <Field \r\n            name=\"Year\"\r\n            label=\"Year\" \r\n            icon=\"icon-calendar\"\r\n            component={this.renderInput}\r\n          />\r\n\r\n          <Field \r\n            name=\"Genres\"\r\n            component={GenreInput}\r\n            // By calling blur redux-form is forced to re-validate.\r\n            manualValidate={() => this.props.dispatch(blur('addMovie', '_validation', Math.random()))}\r\n            isAddMovie\r\n          />\r\n\r\n          <Field \r\n            name=\"Runtime\"\r\n            label=\"Runtime\" \r\n            icon=\"icon-clock\"\r\n            component={this.renderInput}\r\n          />\r\n\r\n          <Field \r\n            name=\"Director\"\r\n            label=\"Director\" \r\n            icon=\"icon-user\"\r\n            component={this.renderInput}\r\n          />\r\n\r\n          {/* Virtual field to manually trigger validation */}  \r\n          <Field \r\n            name=\"_validation\"\r\n            component={() => <span style={{display: 'none'}} />}\r\n          />\r\n\r\n          <Button\r\n            color=\"white\"\r\n            background=\"var(--main-color)\"\r\n            type=\"submit\"\r\n          >\r\n            Create\r\n          </Button>\r\n\r\n          <Button\r\n            color=\"white\"\r\n            background=\"var(--danger-color)\"\r\n            type=\"button\"\r\n            onClick={() => {\r\n              resetModals();\r\n              this.props.initialize();\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </Form>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ movies: { movieItems, showAddModal } }) => ({\r\n  movieItems,\r\n  showAddModal\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { resetModals, addMovie }\r\n)(reduxForm({\r\n  form:'addMovie',\r\n  validate: validateForm,\r\n  destroyOnUnmount: false,\r\n  touchOnBlur: false\r\n})(AddMovie));\r\n","import React, { Component } from 'react';\r\nimport Modal from '../../components/Modal';\r\nimport { connect } from 'react-redux';\r\nimport { updateMovieItems, resetModals } from '../../redux/actions';\r\nimport Form from '../../components/Form';\r\nimport FormGroup from '../../components/Form/FormGroup'\r\nimport Button from '../../components/Button';\r\nimport { Field, reduxForm, blur } from 'redux-form';\r\nimport { validateForm } from '../../utils';\r\nimport GenreInput from '../../components/GenreInput';\r\n\r\nclass EditMovie extends Component {\r\n  renderInput({ input, label, icon, meta: { error } }) {\r\n    const { name } = input;\r\n    return (\r\n      <FormGroup \r\n        input={input}\r\n        name={name}\r\n        label={label}\r\n        icon={icon}\r\n        error={error}\r\n      />\r\n    );\r\n  }\r\n\r\n  onSubmit = formValues => {\r\n    this.props.updateMovieItems(formValues);\r\n  }\r\n\r\n  render() {\r\n    const { resetModals, showEditModal, handleSubmit } = this.props;\r\n    return (\r\n      <Modal isOpen={showEditModal}>\r\n        <Form\r\n          icon=\"icon-play\"\r\n          header=\"Edit movie\" \r\n          onSubmit={handleSubmit(this.onSubmit)}\r\n          noValidate \r\n        >\r\n          <Field \r\n            name=\"Title\"\r\n            label=\"Title\" \r\n            icon=\"icon-subject\"\r\n            component={this.renderInput}\r\n          />\r\n\r\n          <Field \r\n            name=\"Year\"\r\n            label=\"Year\" \r\n            icon=\"icon-calendar\"\r\n            component={this.renderInput}\r\n          />\r\n\r\n          <Field\r\n            name=\"Genres\"\r\n            component={GenreInput}\r\n            // By calling blur redux-form is forced to re-validate.\r\n            manualValidate={() => this.props.dispatch(blur('editMovie', '_validation', Math.random()))}\r\n          />\r\n\r\n          <Field \r\n            name=\"Runtime\"\r\n            label=\"Runtime\" \r\n            icon=\"icon-clock\"\r\n            component={this.renderInput}\r\n          />\r\n\r\n          <Field \r\n            name=\"Director\"\r\n            label=\"Director\" \r\n            icon=\"icon-user\"\r\n            component={this.renderInput}\r\n          />\r\n\r\n          {/* Virtual field to manually trigger validation */}\r\n          <Field \r\n            name=\"_validation\"\r\n            component={() => <span style={{display: 'none'}} />}\r\n          />\r\n\r\n          <Button\r\n            color=\"white\"\r\n            background=\"var(--main-color)\"\r\n            type=\"submit\"\r\n          >\r\n            Update\r\n          </Button>\r\n\r\n          <Button\r\n            color=\"white\"\r\n            background=\"var(--danger-color)\"\r\n            type=\"button\"\r\n            onClick={resetModals}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </Form>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ movies: { showEditModal, selectedMovie, movieItems } }) => ({\r\n  showEditModal,\r\n  initialValues: selectedMovie,\r\n  movieItems\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { updateMovieItems, resetModals }\r\n)(reduxForm({\r\n  form:'editMovie',\r\n  enableReinitialize: true,\r\n  validate: validateForm,\r\n})(EditMovie));","import React from 'react';\r\nimport Modal from '../../components/Modal';\r\nimport { connect } from 'react-redux';\r\nimport { resetModals, deleteMovie } from '../../redux/actions';\r\nimport Button from '../../components/Button';\r\nimport styled from 'styled-components';\r\n\r\nconst DeleteMovie = ({ showDeleteModal, Title, resetModals, deleteMovie }) => (\r\n  <Modal isOpen={showDeleteModal}>\r\n    <StyledWarningIcon>\r\n      <use xlinkHref=\"./sprite.svg#icon-notification\"></use>\r\n    </StyledWarningIcon>\r\n\r\n    <StyledWarningText>Are you sure you want to delete \"{Title}\"?</StyledWarningText>   \r\n\r\n    <Button\r\n      color=\"white\"\r\n      background=\"var(--danger-color)\"\r\n      onClick={deleteMovie}\r\n    >\r\n      Delete\r\n    </Button>\r\n\r\n    <Button\r\n      color=\"white\"\r\n      background=\"var(--main-color)\"\r\n      onClick={resetModals}\r\n    >\r\n      Cancel\r\n    </Button>\r\n  </Modal>\r\n);\r\n\r\nconst StyledWarningIcon = styled.svg`\r\n  fill: #f8bb86;\r\n  width: 8rem;\r\n  height: 8rem;\r\n  display: block;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst StyledWarningText = styled.div`\r\n  font-size: 1.7rem;\r\n  margin: 2rem auto;\r\n`;\r\n\r\nconst mapStateToProps = ({ movies: { showDeleteModal, selectedMovie: { Title } } }) => ({\r\n  showDeleteModal,\r\n  Title \r\n});\r\nexport default connect(mapStateToProps, { resetModals, deleteMovie })(DeleteMovie);\r\n\r\n","import React from 'react'\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst Toast = props => (\r\n  <StyledToast {...props}>{props.message}</StyledToast>\r\n);\r\n\r\nconst fadeOut = keyframes`\r\n  from { \r\n    opacity: 1;\r\n  }\r\n  to {\r\n    opacity: 0;\r\n  }\r\n`;\r\n\r\nconst StyledToast = styled.div`\r\n  margin-bottom: 3rem;\r\n  background: white;\r\n  width: 100%;\r\n  padding: 1.5rem;\r\n  text-align: center;\r\n  box-shadow: 0 .1rem .6rem 0 rgba(0, 0, 0, .2);\r\n  font-weight: bold;\r\n  animation: ${fadeOut} 2s forwards 3s;\r\n  color: var(--success-color);\r\n  border-left: .4rem solid currentColor;\r\n  transition: .3s;\r\n`;\r\n\r\nexport default Toast;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\nimport Toast from '../components/Toast';\r\nimport { removeToast } from '../redux/actions';\r\n\r\nconst Toasts = ({ toasts, removeToast }) => (\r\n  ReactDOM.createPortal(\r\n    <StyledToasts>\r\n      {\r\n        toasts.map(({ id, message }) => (\r\n          <Toast \r\n            message={message} \r\n            key={id}\r\n            onAnimationEnd={() => removeToast(id)} \r\n          />\r\n        ))\r\n      }\r\n    </StyledToasts>,\r\n    document.getElementById('toastMount')\r\n  )\r\n);\r\n\r\nconst StyledToasts = styled.div`\r\n  position: fixed;\r\n  width: 30rem;\r\n  left: 2rem;\r\n  bottom: 0;\r\n  z-index: 5;\r\n`;\r\n\r\nconst mapStateToProps = ({ global: { toasts } }) => ({ toasts });\r\nexport default connect(mapStateToProps, { removeToast })(Toasts);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchMovies } from '../redux/actions';\r\nimport Header from './Layouts/Header';\r\nimport Movies from './Movies';\r\nimport AddMovie from './Movies/AddMovie';\r\nimport EditMovie from './Movies/EditMovie';\r\nimport DeleteMovie from './Movies/DeleteMovie';\r\nimport Toasts from './Toasts';\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchMovies();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <main>\r\n          <Movies />\r\n        </main> \r\n\r\n        <AddMovie />\r\n        <EditMovie />\r\n        <DeleteMovie />\r\n        <Toasts />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { fetchMovies })(App);","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nclass ErrorBoundry extends Component {\r\n  state = { \r\n    hasErr: false\r\n  }\r\n\r\n  static getDerivedStateFromError(ex) {\r\n    return {\r\n      hasErr: true\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.state.hasErr\r\n      ? (\r\n        <StyledErrorBoundry>\r\n          Oops! Something went wrong.\r\n        </StyledErrorBoundry>\r\n      ) : (\r\n        this.props.children\r\n      )\r\n  }\r\n}\r\n\r\nconst StyledErrorBoundry = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: #F2DEDE;\r\n  width: 100%;\r\n  height: 100vh;\r\n`;\r\n\r\nexport default ErrorBoundry;\r\n","import { \r\n  SET_MOVIES, \r\n  SET_EDIT_MODAL, \r\n  SET_DELETE_MODAL, \r\n  SET_SELECTED_MOVIE, \r\n  UPDATE_MOVIE_ITEMS,\r\n  DELETE_MOVIE,\r\n  SET_ADD_MOVIE_MODAL,\r\n  RESET_MODALS,\r\n  ADD_MOVIE, \r\n} from '../reduxConstants';\r\n\r\nconst initialState = {\r\n  movieItems: {},\r\n  selectedMovie: {},\r\n  showAddModal:  false,\r\n  showDeleteModal: false,\r\n  showEditModal: false\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case SET_MOVIES:\r\n      return {\r\n        ...state,\r\n        movieItems: action.payload\r\n      }\r\n\r\n    case SET_SELECTED_MOVIE:\r\n      return {\r\n        ...state,\r\n        selectedMovie: {\r\n          ...state.movieItems[action.payload]\r\n        }\r\n      }\r\n      \r\n    case SET_ADD_MOVIE_MODAL:\r\n      return {\r\n        ...state,\r\n        showAddModal: true\r\n      }\r\n\r\n    case SET_EDIT_MODAL:\r\n      return {\r\n        ...state,\r\n        showEditModal: true\r\n      }\r\n    \r\n    case SET_DELETE_MODAL:\r\n      return {\r\n        ...state,\r\n        showDeleteModal: true\r\n      }\r\n\r\n    case UPDATE_MOVIE_ITEMS:\r\n      return {\r\n        ...state, \r\n        movieItems: {\r\n          ...state.movieItems,\r\n          [action.payload.id]: action.payload\r\n        }\r\n      }\r\n\r\n    case DELETE_MOVIE: {\r\n      const { [state.selectedMovie.id]: deleteValue, ...rest } = state.movieItems;\r\n      return {\r\n        ...state,\r\n        movieItems: rest\r\n      }\r\n    }\r\n\r\n    case RESET_MODALS: {\r\n      return {\r\n        ...state,\r\n        showAddModal: false,\r\n        showDeleteModal: false,\r\n        showEditModal: false\r\n      }\r\n    }\r\n\r\n    case ADD_MOVIE: {\r\n      return {\r\n        ...state,\r\n        movieItems: {\r\n          ...state.movieItems,\r\n          [action.payload.id]: action.payload\r\n        }\r\n      }\r\n    }\r\n    \r\n    default: \r\n      return state;\r\n  }\r\n}","import { SET_TOAST, REMOVE_TOAST } from \"../reduxConstants\";\r\n\r\nconst initialState = {\r\n  toasts: []\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case SET_TOAST:\r\n      return {\r\n        ...state,\r\n        toasts: [\r\n          ...state.toasts,\r\n          action.payload\r\n        ]\r\n      }\r\n\r\n    case REMOVE_TOAST:\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.filter(({ id }) => id !== action.payload.id)\r\n      }\r\n\r\n    default: \r\n      return {\r\n        ...state\r\n      }\r\n  }\r\n}\r\n\r\n","import { combineReducers } from 'redux';\r\nimport moviesReducer from './moviesReducer';\r\nimport globalReducer from './globalReducer';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nexport default combineReducers({\r\n  movies: moviesReducer,\r\n  global: globalReducer,\r\n  form: formReducer\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport rootReducer from './reducers';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  {},\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport App from './containers/App';\nimport ErrorBoundry from './components/ErrorBoundry';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <ErrorBoundry>\n      <App /> \n    </ErrorBoundry>\n  </Provider>,\n  document.getElementById('reactMount')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}